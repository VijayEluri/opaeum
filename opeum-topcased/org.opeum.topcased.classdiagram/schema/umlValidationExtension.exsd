<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.topcased.validation.core" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appInfo>
         <meta.schema plugin="org.topcased.validation.core" id="umlValidationExtension" name="umlValidationExtension"/>
      </appInfo>
      <documentation>
         This extension point allows to add or replace validation rules for elements in a UML model.
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appInfo>
            <meta.element />
         </appInfo>
      </annotation>
      <complexType>
         <sequence minOccurs="1" maxOccurs="unbounded">
            <element ref="Registry"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="Registry">
      <annotation>
         <documentation>
            Define a list of rules for a specific element.
         </documentation>
      </annotation>
      <complexType>
         <sequence minOccurs="1" maxOccurs="unbounded">
            <element ref="Rule"/>
         </sequence>
         <attribute name="element" type="string" use="required">
            <annotation>
               <documentation>
                  The name of the element.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="priority" use="required">
            <annotation>
               <documentation>
                  Defines a priority for the set of rules. There are three levels: HIGH, MIDDLE and  LOW.
               </documentation>
            </annotation>
            <simpleType>
               <restriction base="string">
                  <enumeration value="HIGH">
                  </enumeration>
                  <enumeration value="MIDDLE">
                  </enumeration>
                  <enumeration value="LOW">
                  </enumeration>
               </restriction>
            </simpleType>
         </attribute>
      </complexType>
   </element>

   <element name="Rule">
      <complexType>
         <choice>
            <element ref="OCL"/>
            <element ref="Java"/>
         </choice>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  The name of the new control, or the name of the validation method (see org.eclipse.uml2.uml.util.UMLValidator) that is completed or overriden.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="kind" use="required">
            <annotation>
               <documentation>
                  This parameter configures the association of the described rule with the other defined rules for the same element. The choices are:
&lt;ul&gt;
&lt;li&gt;ADD: adds the rule to the existing list (the name of the rule does not match any existing rule)&lt;/li&gt;
&lt;li&gt;OVERRIDE: overrides the existing control with the new rule (the name of the rule matches an existing rule)&lt;/li&gt;
&lt;li&gt;OVERRIDE OR: defines a new rule for an existing control, and calls the former in case of failure&lt;/li&gt;
&lt;li&gt;OVERRIDE AND: defines a new rule for an existing control, so that both must succeed in order to validate the whole control&lt;/li&gt;&lt;/ul&gt;
               </documentation>
            </annotation>
            <simpleType>
               <restriction base="string">
                  <enumeration value="ADD">
                  </enumeration>
                  <enumeration value="OVERRIDE">
                  </enumeration>
                  <enumeration value="OVERRIDE_OR">
                  </enumeration>
                  <enumeration value="OVERRIDE_AND">
                  </enumeration>
               </restriction>
            </simpleType>
         </attribute>
         <attribute name="message" type="string">
            <annotation>
               <documentation>
                  The string returned when the control fails.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="OCL">
      <complexType>
         <attribute name="expression" type="string" use="required">
            <annotation>
               <documentation>
                  The OCL expression used to validate the concerned element.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="Java">
      <complexType>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  The class that implements IRule and defines the validate method for the concerned element.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn=":org.topcased.modeler.uml.validation.extend.IRule"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>


   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         &lt;extension point=&quot;org.topcased.modeler.uml.umlValidationExtension&quot;&gt;
         &lt;Registry element=&quot;Connector&quot; priority=&quot;HIGH&quot;&gt;
            &lt;Rule id=&quot;validateBetweenInterfacesPorts&quot; kind=&quot;OVERRIDE_OR&quot; message=&quot;One (or both) end of the connector is not of type FlowPort.&quot;&gt;
               &lt;OCL expression=&quot;self.end-&amp;gt;first().role.oclIsKindOf(FlowPort) and self.end-&amp;gt;last().role.oclIsKindOf(FlowPort)&quot; /&gt;               
            &lt;/Rule&gt;
         &lt;/Registry&gt;
         &lt;Registry element=&quot;Requirement&quot; priority=&quot;HIGH&quot;&gt;
            &lt;Rule id=&quot;noOperationAllowed&quot; kind=&quot;ADD&quot; message=&quot;A requirement can&amp;apos;t have operation.&quot;&gt;
               &lt;OCL expression=&quot;self.ownedOperation-&amp;gt;isEmpty()&quot; /&gt;
            &lt;/Rule&gt;
            &lt;Rule id=&quot;noAttributesAllowed&quot; kind=&quot;ADD&quot; message=&quot;A requirement can&amp;apos;t have attribute&quot;&gt;
               &lt;OCL expression=&quot;self.ownedAttribute-&amp;gt;isEmpty()&quot; /&gt;
            &lt;/Rule&gt;
         &lt;/Registry&gt;
      &lt;/extension&gt;
      </documentation>
   </annotation>




</schema>
