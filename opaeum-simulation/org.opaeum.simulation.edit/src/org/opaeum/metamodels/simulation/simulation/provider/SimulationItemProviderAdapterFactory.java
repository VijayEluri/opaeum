/**
 */
package org.opaeum.metamodels.simulation.simulation.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import org.opaeum.metamodels.simulation.simulation.util.SimulationAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class SimulationItemProviderAdapterFactory extends SimulationAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public SimulationItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.opaeum.metamodels.simulation.simulation.SimulatedValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SimulatedValueItemProvider simulatedValueItemProvider;

	/**
	 * This creates an adapter for a {@link org.opaeum.metamodels.simulation.simulation.SimulatedValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSimulatedValueAdapter() {
		if (simulatedValueItemProvider == null) {
			simulatedValueItemProvider = new SimulatedValueItemProvider(this);
		}

		return simulatedValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.opaeum.metamodels.simulation.simulation.NormalDistribution} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NormalDistributionItemProvider normalDistributionItemProvider;

	/**
	 * This creates an adapter for a {@link org.opaeum.metamodels.simulation.simulation.NormalDistribution}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNormalDistributionAdapter() {
		if (normalDistributionItemProvider == null) {
			normalDistributionItemProvider = new NormalDistributionItemProvider(this);
		}

		return normalDistributionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.opaeum.metamodels.simulation.simulation.UniformDistribution} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UniformDistributionItemProvider uniformDistributionItemProvider;

	/**
	 * This creates an adapter for a {@link org.opaeum.metamodels.simulation.simulation.UniformDistribution}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUniformDistributionAdapter() {
		if (uniformDistributionItemProvider == null) {
			uniformDistributionItemProvider = new UniformDistributionItemProvider(this);
		}

		return uniformDistributionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.opaeum.metamodels.simulation.simulation.ExponentialDistribution} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExponentialDistributionItemProvider exponentialDistributionItemProvider;

	/**
	 * This creates an adapter for a {@link org.opaeum.metamodels.simulation.simulation.ExponentialDistribution}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExponentialDistributionAdapter() {
		if (exponentialDistributionItemProvider == null) {
			exponentialDistributionItemProvider = new ExponentialDistributionItemProvider(this);
		}

		return exponentialDistributionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.opaeum.metamodels.simulation.simulation.SimulatingSlot} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SimulatingSlotItemProvider simulatingSlotItemProvider;

	/**
	 * This creates an adapter for a {@link org.opaeum.metamodels.simulation.simulation.SimulatingSlot}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSimulatingSlotAdapter() {
		if (simulatingSlotItemProvider == null) {
			simulatingSlotItemProvider = new SimulatingSlotItemProvider(this);
		}

		return simulatingSlotItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.opaeum.metamodels.simulation.simulation.NumericValueDistribution} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NumericValueDistributionItemProvider numericValueDistributionItemProvider;

	/**
	 * This creates an adapter for a {@link org.opaeum.metamodels.simulation.simulation.NumericValueDistribution}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNumericValueDistributionAdapter() {
		if (numericValueDistributionItemProvider == null) {
			numericValueDistributionItemProvider = new NumericValueDistributionItemProvider(this);
		}

		return numericValueDistributionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.opaeum.metamodels.simulation.simulation.WeightedEnumLiteralValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WeightedEnumLiteralValueItemProvider weightedEnumLiteralValueItemProvider;

	/**
	 * This creates an adapter for a {@link org.opaeum.metamodels.simulation.simulation.WeightedEnumLiteralValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWeightedEnumLiteralValueAdapter() {
		if (weightedEnumLiteralValueItemProvider == null) {
			weightedEnumLiteralValueItemProvider = new WeightedEnumLiteralValueItemProvider(this);
		}

		return weightedEnumLiteralValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.opaeum.metamodels.simulation.simulation.ContainedActualInstance} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ContainedActualInstanceItemProvider containedActualInstanceItemProvider;

	/**
	 * This creates an adapter for a {@link org.opaeum.metamodels.simulation.simulation.ContainedActualInstance}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContainedActualInstanceAdapter() {
		if (containedActualInstanceItemProvider == null) {
			containedActualInstanceItemProvider = new ContainedActualInstanceItemProvider(this);
		}

		return containedActualInstanceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.opaeum.metamodels.simulation.simulation.WeightedBooleanValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WeightedBooleanValueItemProvider weightedBooleanValueItemProvider;

	/**
	 * This creates an adapter for a {@link org.opaeum.metamodels.simulation.simulation.WeightedBooleanValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWeightedBooleanValueAdapter() {
		if (weightedBooleanValueItemProvider == null) {
			weightedBooleanValueItemProvider = new WeightedBooleanValueItemProvider(this);
		}

		return weightedBooleanValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.opaeum.metamodels.simulation.simulation.NumberRangeDistribution} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NumberRangeDistributionItemProvider numberRangeDistributionItemProvider;

	/**
	 * This creates an adapter for a {@link org.opaeum.metamodels.simulation.simulation.NumberRangeDistribution}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNumberRangeDistributionAdapter() {
		if (numberRangeDistributionItemProvider == null) {
			numberRangeDistributionItemProvider = new NumberRangeDistributionItemProvider(this);
		}

		return numberRangeDistributionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.opaeum.metamodels.simulation.simulation.WeightedStringValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WeightedStringValueItemProvider weightedStringValueItemProvider;

	/**
	 * This creates an adapter for a {@link org.opaeum.metamodels.simulation.simulation.WeightedStringValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWeightedStringValueAdapter() {
		if (weightedStringValueItemProvider == null) {
			weightedStringValueItemProvider = new WeightedStringValueItemProvider(this);
		}

		return weightedStringValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.opaeum.metamodels.simulation.simulation.SimulationModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SimulationModelItemProvider simulationModelItemProvider;

	/**
	 * This creates an adapter for a {@link org.opaeum.metamodels.simulation.simulation.SimulationModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSimulationModelAdapter() {
		if (simulationModelItemProvider == null) {
			simulationModelItemProvider = new SimulationModelItemProvider(this);
		}

		return simulationModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.opaeum.metamodels.simulation.simulation.InstanceSimulation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InstanceSimulationItemProvider instanceSimulationItemProvider;

	/**
	 * This creates an adapter for a {@link org.opaeum.metamodels.simulation.simulation.InstanceSimulation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInstanceSimulationAdapter() {
		if (instanceSimulationItemProvider == null) {
			instanceSimulationItemProvider = new InstanceSimulationItemProvider(this);
		}

		return instanceSimulationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.opaeum.metamodels.simulation.simulation.ActualInstance} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ActualInstanceItemProvider actualInstanceItemProvider;

	/**
	 * This creates an adapter for a {@link org.opaeum.metamodels.simulation.simulation.ActualInstance}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createActualInstanceAdapter() {
		if (actualInstanceItemProvider == null) {
			actualInstanceItemProvider = new ActualInstanceItemProvider(this);
		}

		return actualInstanceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.opaeum.metamodels.simulation.simulation.WeightedInstanceValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WeightedInstanceValueItemProvider weightedInstanceValueItemProvider;

	/**
	 * This creates an adapter for a {@link org.opaeum.metamodels.simulation.simulation.WeightedInstanceValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWeightedInstanceValueAdapter() {
		if (weightedInstanceValueItemProvider == null) {
			weightedInstanceValueItemProvider = new WeightedInstanceValueItemProvider(this);
		}

		return weightedInstanceValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.opaeum.metamodels.simulation.simulation.WeightedSimpleTypeValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WeightedSimpleTypeValueItemProvider weightedSimpleTypeValueItemProvider;

	/**
	 * This creates an adapter for a {@link org.opaeum.metamodels.simulation.simulation.WeightedSimpleTypeValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWeightedSimpleTypeValueAdapter() {
		if (weightedSimpleTypeValueItemProvider == null) {
			weightedSimpleTypeValueItemProvider = new WeightedSimpleTypeValueItemProvider(this);
		}

		return weightedSimpleTypeValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.opaeum.metamodels.simulation.simulation.LiteralSimpleType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiteralSimpleTypeItemProvider literalSimpleTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.opaeum.metamodels.simulation.simulation.LiteralSimpleType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiteralSimpleTypeAdapter() {
		if (literalSimpleTypeItemProvider == null) {
			literalSimpleTypeItemProvider = new LiteralSimpleTypeItemProvider(this);
		}

		return literalSimpleTypeItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (simulatedValueItemProvider != null) simulatedValueItemProvider.dispose();
		if (normalDistributionItemProvider != null) normalDistributionItemProvider.dispose();
		if (uniformDistributionItemProvider != null) uniformDistributionItemProvider.dispose();
		if (exponentialDistributionItemProvider != null) exponentialDistributionItemProvider.dispose();
		if (simulatingSlotItemProvider != null) simulatingSlotItemProvider.dispose();
		if (numericValueDistributionItemProvider != null) numericValueDistributionItemProvider.dispose();
		if (weightedEnumLiteralValueItemProvider != null) weightedEnumLiteralValueItemProvider.dispose();
		if (containedActualInstanceItemProvider != null) containedActualInstanceItemProvider.dispose();
		if (weightedBooleanValueItemProvider != null) weightedBooleanValueItemProvider.dispose();
		if (numberRangeDistributionItemProvider != null) numberRangeDistributionItemProvider.dispose();
		if (weightedStringValueItemProvider != null) weightedStringValueItemProvider.dispose();
		if (simulationModelItemProvider != null) simulationModelItemProvider.dispose();
		if (instanceSimulationItemProvider != null) instanceSimulationItemProvider.dispose();
		if (actualInstanceItemProvider != null) actualInstanceItemProvider.dispose();
		if (weightedInstanceValueItemProvider != null) weightedInstanceValueItemProvider.dispose();
		if (weightedSimpleTypeValueItemProvider != null) weightedSimpleTypeValueItemProvider.dispose();
		if (literalSimpleTypeItemProvider != null) literalSimpleTypeItemProvider.dispose();
	}

}
