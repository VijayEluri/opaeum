<?xml version="1.0" encoding="UTF-8"?>
<components xmlns="http://jboss.com/products/seam/components" xmlns:core="http://jboss.com/products/seam/core" xmlns:drools="http://jboss.com/products/seam/drools"
	xmlns:jms="http://jboss.com/products/seam/jms" xmlns:mail="http://jboss.com/products/seam/mail" xmlns:persistence="http://jboss.com/products/seam/persistence" xmlns:security="http://jboss.com/products/seam/security"
	xmlns:transaction="http://jboss.com/products/seam/transaction" xmlns:async="http://jboss.com/products/seam/async" xmlns:web="http://jboss.com/products/seam/web" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://jboss.com/products/seam/core http://jboss.com/products/seam/core-2.2.xsd  
						http://jboss.com/products/seam/persistence http://jboss.com/products/seam/persistence-2.2.xsd                  
						http://jboss.com/products/seam/drools http://jboss.com/products/seam/drools-2.2.xsd                  
						http://jboss.com/products/seam/transaction http://jboss.com/products/seam/transaction-2.2.xsd   
						http://jboss.com/products/seam/async http://jboss.com/products/seam/async-2.2.xsd   
						http://jboss.com/products/seam/bpm http://jboss.com/products/seam/bpm-2.2.xsd                  
						http://jboss.com/products/seam/security http://jboss.com/products/seam/security-2.2.xsd                  
						http://jboss.com/products/seam/mail http://jboss.com/products/seam/mail-2.2.xsd                  
						http://jboss.com/products/seam/web http://jboss.com/products/seam/web-2.2.xsd                  
						http://jboss.com/products/seam/jms http://jboss.com/products/seam/jms-2.2.xsd                  
						http://jboss.com/products/seam/components http://jboss.com/products/seam/components-2.2.xsd">

	<core:init debug="true" jndi-pattern="@jndiPattern@" transaction-management-enabled="false" />
	<core:manager concurrent-request-timeout="500" conversation-id-parameter="cid" conversation-timeout="120000" parent-conversation-id-parameter="pid"
		default-flush-mode="COMMIT" />
	<!-- Make sure this URL pattern is the same as that used by the Faces Servlet -->
	<web:hot-deploy-filter url-pattern="*.seam" />
	<web:rewrite-filter view-mapping="*.*" />

	<factory name="httpRequest" value="#{facesContext.externalContext.request}" auto-create="true" />
	<factory name="httpSession" value="#{facesContext.externalContext.request.session}" auto-create="true" />

	<persistence:filter name="noDeletedObjects">
		<persistence:name>noDeletedObjects</persistence:name>
	</persistence:filter>
	<persistence:managed-persistence-context auto-create="true" name="entityManager" persistence-unit-jndi-name="java:/cmEntityManagerFactory">
		<persistence:filters>
			<value>#{noDeletedObjects}</value>
		</persistence:filters>
	</persistence:managed-persistence-context>

	<persistence:managed-persistence-context auto-create="true" name="entityManagerWithDeletedObjects" persistence-unit-jndi-name="java:/cmEntityManagerFactory">
	</persistence:managed-persistence-context>
	<factory auto-create="true" name="session" scope="STATELESS" value="#{entityManager.delegate}" />
	<persistence:managed-persistence-context auto-create="true" name="entityManagerAudit" persistence-unit-jndi-name="java:/cmEntityManagerFactory" />
	<factory auto-create="true" name="sessionAudit" scope="STATELESS" value="#{entityManagerAudit.delegate}" />
	<transaction:ejb-transaction />
	<!-- <drools:rule-base name="securityRules"> -->
	<!-- <drools:rule-files> -->
	<!-- <value>/security.drl</value> -->
	<!-- </drools:rule-files> -->
	<!-- </drools:rule-base> -->
	<security:rule-based-permission-resolver security-rules="#{securityRules}" />
	<security:identity authenticate-method="#{authenticator.authenticate}" remember-me="true" />
	<!-- <security:jpa-identity-store user-class="com.rorotika.cm.user.User" role-class="com.rorotika.cm.user.AbstractUserRoleInterface" /> -->
	<jms:managed-queue-sender auto-create="true" name="auditQueueSender" queue-jndi-name="queue/AuditQueue" />
	<jms:managed-queue-sender auto-create="true" name="networkElementLoadInsertQueueSender" queue-jndi-name="queue/NetworkElementLoadInsertQueue" />
	<jms:managed-queue-sender auto-create="true" name="networkElementLoadInsertReplyQueueSender" queue-jndi-name="queue/NetworkElementLoadInsertReplyQueue" />
	<jms:managed-queue-sender auto-create="true" name="networkElementLoadUpdateQueueSender" queue-jndi-name="queue/NetworkElementLoadUpdateQueue" />
	<jms:managed-queue-sender auto-create="true" name="networkElementLoadUpdateReplyQueueSender" queue-jndi-name="queue/NetworkElementLoadUpdateReplyQueue" />
	<jms:managed-queue-sender auto-create="true" name="networkElementLoadDeleteQueueSender" queue-jndi-name="queue/NetworkElementLoadDeleteQueue" />
	<jms:managed-queue-sender auto-create="true" name="networkElementLoadDeleteReplyQueueSender" queue-jndi-name="queue/NetworkElementLoadDeleteReplyQueue" />
	<jms:managed-queue-sender auto-create="true" name="networkElementLoadAssociationQueueSender" queue-jndi-name="queue/NetworkElementLoadAssociationQueue" />
	<jms:managed-queue-sender auto-create="true" name="networkElementLoadAssociationReplyQueueSender" queue-jndi-name="queue/NetworkElementLoadAssociationReplyQueue" />
	<jms:managed-queue-sender auto-create="true" name="droolsTimerQueueSender" queue-jndi-name="queue/DroolsTimerQueue" />

	<jms:managed-queue-sender auto-create="true" name="networkElementLoadAssociationDeletionQueueSender" queue-jndi-name="queue/NetworkElementLoadAssociationDeletionQueue" />
	<jms:managed-queue-sender auto-create="true" name="networkElementLoadAssociationDeletionReplyQueueSender" queue-jndi-name="queue/NetworkElementLoadAssociationDeletionReplyQueue" />

	<jms:managed-queue-sender auto-create="true" name="representedCellQueueSender" queue-jndi-name="queue/RepresentedCellQueue" />
	<jms:managed-queue-sender auto-create="true" name="representedCellReplyQueueSender" queue-jndi-name="queue/RepresentedCellReplyQueue" />

	<jms:managed-queue-sender auto-create="true" name="notificationQueueSender" queue-jndi-name="queue/NotificationQueue" />
	<jms:managed-queue-sender auto-create="true" name="signalQueueSender" queue-jndi-name="queue/SignalQueue" />

	<jms:queue-connection queue-connection-factory-jndi-name="/ConnectionFactory" />

	<!--<event type="org.jboss.seam.security.notLoggedIn"> <action execute="#{redirect.captureCurrentView}" /> </event> -->
	<event type="org.jboss.seam.security.loginSuccessful">
		<action execute="#{redirect.returnToCapturedView}" />
	</event>

	<mail:mail-session session-jndi-name="java:/Mail" />

	<!-- For use with jBPM pageflow or process management <bpm:jbpm> <bpm:process-definitions></bpm:process-definitions> <bpm:pageflow-definitions></bpm:pageflow-definitions> </bpm:jbpm> -->
	<core:resource-loader>
		<core:bundle-names>
			<value>application_messages</value>
			<value>messages_en</value>
		</core:bundle-names>
	</core:resource-loader>

	<async:quartz-dispatcher />

</components>
