orthogonal 

OperationCallEvents must have operations defined on the activity itself
STructuralFeatureACtions must have features defined on the target object

the composites of entities and processes must be entities or processes
All concrete entities and processes must have one composite.
operations with body expressions cannot have multiple concurrent results or exceptions
Enumerations can only have properties typed by primitives,simpletypes or other enumerations 
Assocation generalisation is only allowed on compositions
With composition generalisation, the child must be different, but the parent can stay the same
All derived attributes must have a defaultValue/derivation rule

Only one classifier allowed on instancespecifications
The classifier of Enum literals must be the containing Enum

Single inheritance
All entities must only have zero or one superclasses
All normal classes must have one of the following stereotypes: Entity,BusinessWorker,Business....
Every Entity,Activity,Statemachine must have a name
All qualifiers must have a backing attribute, mapped by name
Associations navigable from entities to datatypes must be compositional
check for recursively dependant required fields in one-to-one relationships

Do not allow deletion of wait states (accept event, tasks, subprocess calls, states)
rather deprecate them and hide them

all user tasks must have targets or be in a swimlane, or be user responsibilities in the context classifier